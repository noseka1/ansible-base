- import_role:
    name: openshift_common
    tasks_from: get_cluster_domain.yml

- import_tasks: local_repo_create.yml

- name: Set application variables
  set_fact:
    autogitops_app_name: '{{ autogitops_app_dst_path | regex_replace("/", "-") }}'
    autogitops_argocd_namespace: ag-{{ openshift_common_cluster_domain | regex_replace('\.', '-') }}

- name: Set application config directory
  set_fact:
    autogitops_app_cfg_dir: '{{ autogitops_git_dir }}/{{ autogitops_root_name }}/{{ autogitops_app_name }}'

- name: Check if application.yaml exists
  stat:
    path: '{{ autogitops_app_cfg_dir }}/application.yaml'
  register: autogitops_app_dir_stat_result

- name: Retrieve application.yaml
  slurp:
    path: '{{ autogitops_app_cfg_dir }}/application.yaml'
  register: autogitops_app_yaml_slurp_result
  when: autogitops_app_dir_stat_result.stat.exists

- name: Application git directory does not exist
  set_fact:
    autogitops_app_dst_dir: ''
  when:
    - not autogitops_app_dir_stat_result.stat.exists

- name: Set application git directory
  set_fact:
    autogitops_app_dst_dir: '{{ autogitops_git_dir }}/{{ (autogitops_app_yaml_slurp_result.content | b64decode | from_yaml).spec.source.path }}'
  when: autogitops_app_dir_stat_result.stat.exists

- include_tasks: app_delete_dir.yml
  when:
    - autogitops_app_dst_dir | length > 0
    - autogitops_app_dir_stat_result.stat.exists

- include_tasks: local_repo_push.yml
  when: autogitops_app_dst_dir | length > 0

- import_role:
    name: openshift_gitops
    tasks_from: get_argocd_api_connection.yml

- name: Check if application {{ autogitops_app_name }} exists
  uri:
    url: '{{ argocd_api_url }}/api/v1/applications/{{ autogitops_app_name }}?appNamespace={{ autogitops_argocd_namespace }}'
    method: GET
    headers:
      Authorization: Bearer {{ argocd_api_token }}
    validate_certs: '{{ autogitops_argocd_validate_certs }}'
    status_code: [ 200, 403, 404 ]
  register: autogitops_app_resource_result

- include_tasks: app_sync_delete.yml
  when: autogitops_app_resource_result.status == 200

- name: Delete application directories
  file:
    path: '{{ item }}'
    state: absent
  loop:
    - '{{ autogitops_app_dst_dir }}'
    - '{{ autogitops_app_cfg_dir }}'

- import_tasks: local_repo_push.yml

- name: Wait for application {{ autogitops_app_name }} to disappear from Argo CD
  uri:
    url: '{{ argocd_api_url }}/api/v1/applications/{{ autogitops_app_name }}?appNamespace={{ autogitops_argocd_namespace }}'
    method: GET
    headers:
      Authorization: Bearer {{ argocd_api_token }}
    validate_certs: '{{ autogitops_argocd_validate_certs }}'
    status_code: [ 200, 403, 404 ]
  register: autogitops_app_resource_result
  when: autogitops_git_updated
  until:
    - autogitops_app_resource_result.status != 200
  retries: 60
  delay: 1
