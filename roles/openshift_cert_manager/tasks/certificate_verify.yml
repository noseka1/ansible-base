- name: Waiting since {{ lookup("pipe", "date +%r") }} for certificate issuer {{ cert_manager_certificate_issuer_name }} to become ready
  kubernetes.core.k8s_info:
    api_version: cert-manager.io/v1
    kind: ClusterIssuer
    name: '{{ cert_manager_certificate_issuer_name }}'
  register: cert_manager_cluster_issuer_result
  until:
    - cert_manager_cluster_issuer_result.resources.0.status.conditions is defined
    - cert_manager_cluster_issuer_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Ready') | list | length > 0
    - (cert_manager_cluster_issuer_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Ready') | first).status == "True"
  retries: 60
  delay: 10

- name: Create certificate {{ cert_manager_certificate_issuer_name }}-test
  kubernetes.core.k8s:
    template:
      - test/certificate.yaml

- name: Waiting since {{ lookup("pipe", "date +%r") }} for certificate {{ cert_manager_certificate_issuer_name }}-test to become ready
  kubernetes.core.k8s_info:
    api_version: cert-manager.io/v1
    kind: Certificate
    name: '{{ cert_manager_certificate_issuer_name }}-test'
    namespace: '{{ cert_manager_instance_namespace }}'
  register: cert_manager_certificate_object_result
  until:
    - cert_manager_certificate_object_result.resources.0.status.conditions is defined
    - cert_manager_certificate_object_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Ready') | list | length > 0
    - (cert_manager_certificate_object_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Ready') | first).status == "True"
  # If the cloud secret is created after the cluster issuer then it takes a long time
  # for the cluster issuer to issue the certificate.
  retries: 240
  delay: 10

- name: Retrieve the secret '{{ cert_manager_certificate_object_result.resources.0.spec.secretName }}' created by cert-manager
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ cert_manager_certificate_object_result.resources.0.spec.secretName }}'
    namespace: '{{ cert_manager_instance_namespace }}'
  register: cert_manager_test_secret
  until: cert_manager_test_secret.resources | length > 0
  retries: 12
  delay: 5

- name: Extract the certificate subject name
  command:
    cmd: openssl x509 -noout -subject
    stdin: '{{ cert_manager_test_secret.resources.0.data["tls.crt"] | b64decode }}'
  changed_when: false
  register: cert_manager_test_cert_subject

- name: Fail if the certificate subject is not correct
  fail:
  when: cert_manager_test_cert_subject.stdout.find(cert_manager_certificate_dns_name) == -1
