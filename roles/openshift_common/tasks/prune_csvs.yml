- name: Obtain all CSVs
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
  register: prune_csvs_existing_csvs

- set_fact:
    prune_csvs_all: '{{ prune_csvs_existing_csvs | json_query("resources[].metadata.name") | unique }}'

- name: Obtain all operator Subscriptions
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
  register: prune_csvs_existing_subscriptions

- set_fact:
    prune_csvs_keep: '{{ (prune_csvs_existing_subscriptions | json_query("resources[].status.installedCSV")) + ["packageserver"] }}'

- set_fact:
    prune_csvs_delete: '{{ prune_csvs_all | difference(prune_csvs_keep) }}'

- name: Going to delete the following CSVs
  debug:
    var: prune_csvs_delete

- name: Obtain all Kubernetes namespaces
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
  register: prune_csvs_existing_namespaces
  when: prune_csvs_delete | length > 0

- name: Delete CVSs that don't belong to an existing Subscription
  kubernetes.core.k8s:
    template: prune_csvs.yml
    state: absent
  register: prune_csvs_delete_result
  failed_when:
    - prune_csvs_delete_result is failed
    - prune_csvs_delete_result.status != 404
  when: prune_csvs_delete | length > 0
