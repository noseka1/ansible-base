apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: {{ gitops_operator_name }}
  namespace: {{ gitops_operator_namespace }}
spec:
{% if gitops_operator_subscription_channel | length > 0 %}
  channel: {{ gitops_operator_subscription_channel }}
{% endif %}
  installPlanApproval: {{ gitops_operator_subscription_approval }}
  name: openshift-gitops-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
{% if gitops_operator_subscription_starting_csv | length > 0 %}
  startingCSV: {{ gitops_operator_subscription_starting_csv }}
{% endif %}
  config:
    env:
    # Create the default instance in the openshift-gitops namespace
    - name: DISABLE_DEFAULT_ARGOCD_INSTANCE
      value: "false"
    # Create link to Argo CD in OpenShift Web Console
    - name: DISABLE_DEFAULT_ARGOCD_CONSOLELINK
      value: "false"
    # By default, Argo CD instances can only read cluster-scoped resources. To allow Argo
    # CD to create/update cluster-scoped resources, additional priviliges are required.
    #
    # Argo CD can be granted create/update privileges to a list of specific cluster-scoped
    # resources. These privileges are defined in the ClusterRole object
    # openshift-gitops-openshift-gitops-argocd-application-controller and
    # openshift-gitops-openshift-gitops-argocd-server. To grant these privileges to a
    # specific Argo CD instance, one needs to add the namespace where this instance is
    # located to the ARGOCD_CLUSTER_CONFIG_NAMESPACES command-separated list, see below.
    #
    # If Argo CD requires additional privileges, one can create a custom ClusterRole and
    # ClusterRoleBinding to assign these privileges to the Argo CD service account in the
    # specific namespace.
    #
    # See also:
    # https://github.com/redhat-developer/gitops-operator/blob/9f7698583cce8a22931951e57aab0ea9b36ff98f/docs/OpenShift%20GitOps%20Usage%20Guide.md#default-permissions-provided-to-argo-cd-instance
    - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
      value: "openshift-gitops"
    # You can configure log levels, such as debug, info, warn, error, panic and fatal.
    # The default log level set for the output is info.
    - name: LOG_LEVEL
      value: info
    # HTTP proxy settings
    - name: HTTP_PROXY
      value: ""
    - name: HTTPS_PROXY
      value: ""
    - name: NO_PROXY
      value: ""
