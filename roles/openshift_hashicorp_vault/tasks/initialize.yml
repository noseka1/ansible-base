- name: Initialize vault
  hashivault_init:
    secret_shares: 1
    secret_threshold: 1
  register: hashicorp_vault_init
  environment:
    VAULT_ADDR: '{{ hashicorp_vault_addr }}'
    VAULT_SKIP_VERIFY: '{{ hashicorp_vault_skip_verify }}'

- name: Save the unseal key in the Kubernetes secret for later use
  kubernetes.core.k8s:
    template: postinstall/vault-unseal-key-secret.yaml

- name: Unseal vault
  import_tasks: unseal.yml

- name: Deploy script that unseals vault automatically
  kubernetes.core.k8s:
    template:
      - postinstall/vault-unseal-deploy.yaml
      - postinstall/vault-unseal-script-cm.yaml

- name: Enable user/password authentication
  hashivault_auth_method:
    method_type: userpass
    state: enabled
  environment:
    VAULT_ADDR: '{{ hashicorp_vault_addr }}'
    VAULT_SKIP_VERIFY: '{{ hashicorp_vault_skip_verify }}'
    VAULT_TOKEN: '{{ hashicorp_vault_init.root_token }}'

- name: Create admin user authenticated by password
  hashivault_userpass:
    name: admin
    pass: '{{ generic_user_password }}'
    policies: admin
  environment:
    VAULT_ADDR: '{{ hashicorp_vault_addr }}'
    VAULT_SKIP_VERIFY: '{{ hashicorp_vault_skip_verify }}'
    VAULT_TOKEN: '{{ hashicorp_vault_init.root_token }}'

- name: Grant full access to the admin user
  hashivault_policy:
    name: admin
    rules: |
      path "*"
      {
        capabilities = ["create", "read", "update", "delete", "list", "sudo"]
      }
  environment:
    VAULT_ADDR: '{{ hashicorp_vault_addr }}'
    VAULT_SKIP_VERIFY: '{{ hashicorp_vault_skip_verify }}'
    VAULT_TOKEN: '{{ hashicorp_vault_init.root_token }}'
