- set_fact:
    multicluster_engine_managed_cluster_control_plane_agents: >-
      {{ multicluster_engine_managed_cluster.cluster_nodes.values() | selectattr('role', 'equalto', 'master') | length }}
    multicluster_engine_managed_cluster_worker_agents: >-
      {{ multicluster_engine_managed_cluster.cluster_nodes.values() | selectattr('role', 'equalto', 'worker') | length }}

- fail:
    msg: user_managed_networking must be set to true when deploying SNO
  when:
    - multicluster_engine_managed_cluster_control_plane_agents | int == 1
    - multicluster_engine_managed_cluster_worker_agents | int == 0
    - multicluster_engine_managed_cluster.user_managed_networking == false

- import_role:
    name: openshift_common
    tasks_from: get_openshift_pull_secret.yml

- name: Create infrastructure environment namespace for deploying OpenShift cluster {{ multicluster_engine_managed_cluster.cluster_name }}
  kubernetes.core.k8s:
    template:
      - assisted-installer/infraenv/cluster-infraenv-ns.yaml

- import_tasks: deploy_cluster_baremetal_network.yml
  when: multicluster_engine_managed_cluster_baremetal.network_config_fileglob | default('') | length > 0

- name: Create infrastructure environment objects
  kubernetes.core.k8s:
    template:
      - assisted-installer/infraenv/capi-provider-role-role.yaml
      - assisted-installer/infraenv/pullsecret-cluster-secret.yaml
      - assisted-installer/infraenv/cluster-infraenv.yaml
      - assisted-installer/infraenv/baremetalhost.yaml
      - assisted-installer/infraenv/bmc-secret.yaml

- name: Create objects for deployment of {{ multicluster_engine_managed_cluster.cluster_name }} managed cluster
  kubernetes.core.k8s:
    template:
      - common/cluster-ns.yaml
      - common/cluster-clusterdeployment.yaml
      - common/cluster-klusterletaddonconfig.yaml
      - common/cluster-managedcluster.yaml
      - common/cluster-pull-secret-secret.yaml
      - assisted-installer/cluster-agentclusterinstall.yaml

- name: Waiting since {{ lookup("pipe", "date +%r") }} for installer ISO image to be generated
  kubernetes.core.k8s_info:
    api_version: agent-install.openshift.io/v1beta1
    kind: InfraEnv
    name: '{{ multicluster_engine_managed_cluster.cluster_name }}'
    namespace: '{{ multicluster_engine_managed_cluster.cluster_name }}-infraenv'
  register: multicluster_engine_managed_cluster_infraenv_result
  until:
    - multicluster_engine_managed_cluster_infraenv_result.resources.0.status.conditions is defined
    - multicluster_engine_managed_cluster_infraenv_result.resources.0.status.conditions | selectattr('type', 'equalto', 'ImageCreated') | list | length > 0
    - (multicluster_engine_managed_cluster_infraenv_result.resources.0.status.conditions | selectattr('type', 'equalto', 'ImageCreated') | first).status == "True"
  retries: 12
  delay: 5

- set_fact:
    msg: |
      Cluster installation cannot proceed until the required cluster hosts are added to the inventory.

      Hosts managed using BMC will be added automatically. All other hosts require performing manual steps described below.

      Browse to the Multi-cluster Engine (or RHACM) Dashboard. From the left-side menu click on Infrastructure and select Host inventory.
      Click on the {{ multicluster_engine_managed_cluster.cluster_name }} infrastructure environment. Click Add hosts and add the required cluster hosts to the inventory.

      Alternatively, you can download the bootable installer ISO image using the command:
      $ curl -L '{{ multicluster_engine_managed_cluster_infraenv_result.resources.0.status.isoDownloadURL }}' -o {{ multicluster_engine_managed_cluster_infraenv_result.resources.0.status.isoDownloadURL | regex_replace('.*/([A-Za-z0-9-]+).*', '\1') }}-discovery.iso

      Alternatively, if you are PXE booting your machines, you can find the boot artifacts here:
      {{ multicluster_engine_managed_cluster_infraenv_result.resources.0.status.bootArtifacts | to_nice_yaml }}

- debug: msg="{{ msg.split('\n') }}"

- name: Waiting since {{ lookup("pipe", "date +%r") }} for {{ multicluster_engine_managed_cluster.cluster_nodes.keys() | length }} cluster host(s) to show up in the inventory
  kubernetes.core.k8s_info:
    api_version: agent-install.openshift.io/v1beta1
    kind: Agent
    namespace: '{{ multicluster_engine_managed_cluster.cluster_name }}-infraenv'
  register: multicluster_engine_managed_cluster_agent_result
  until: >-
    multicluster_engine_managed_cluster.cluster_nodes.keys() is
      subset(multicluster_engine_managed_cluster_agent_result.resources | json_query("[*].status.inventory.interfaces[*].macAddress") | flatten)
  retries: 180
  delay: 10

- include_tasks: deploy_cluster_baremetal_bind_host.yml
  loop: '{{ multicluster_engine_managed_cluster_agent_result.resources }}'
  loop_control:
    loop_var: outer_item
    label: '{{ outer_item.metadata.name }}'

- name: Waiting since {{ lookup("pipe", "date +%r") }} for cluster requirements to be met
  kubernetes.core.k8s_info:
    api_version: extensions.hive.openshift.io/v1beta1
    kind: AgentClusterInstall
    name: '{{ multicluster_engine_managed_cluster.cluster_name }}'
    namespace: '{{ multicluster_engine_managed_cluster.cluster_name }}'
  register: multicluster_engine_managed_cluster_agentclusterinstall_result
  until:
    - multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions is defined
    - multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions | selectattr('type', 'equalto', 'RequirementsMet') | list | length > 0
    - (multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions | selectattr('type', 'equalto', 'RequirementsMet') | first).status == "True"
  retries: 60
  delay: 10

- name: Waiting since {{ lookup("pipe", "date +%r") }} for cluster instalallation to finish
  kubernetes.core.k8s_info:
    api_version: extensions.hive.openshift.io/v1beta1
    kind: AgentClusterInstall
    name: '{{ multicluster_engine_managed_cluster.cluster_name }}'
    namespace: '{{ multicluster_engine_managed_cluster.cluster_name }}'
  register: multicluster_engine_managed_cluster_agentclusterinstall_result
  until:
    - multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions is defined
    - multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Stopped') | list | length > 0
    - (multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Stopped') | first).status == "True"
  retries: 540
  delay: 10

- fail:
    msg: Cluster installation failed.
  when:
    - multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions is defined
    - multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Failed') | list | length > 0
    - (multicluster_engine_managed_cluster_agentclusterinstall_result.resources.0.status.conditions | selectattr('type', 'equalto', 'Failed') | first).status == "True"
