- name: Check if master nodes are schedulable
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Scheduler
    name: cluster
  register: rook_volume_node_masters_schedulable_result

- name: Retrieve OpenShift master nodes
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
      - node-role.kubernetes.io/master=
  register: rook_volume_node_candidates
  when: rook_volume_node_masters_schedulable_result.resources.0.spec.mastersSchedulable

- block:
    - name: Retrieve OpenShift worker nodes
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
        label_selectors:
          - node-role.kubernetes.io/worker=
      register: rook_volume_node_candidates_tmp

    - set_fact:
        rook_volume_node_candidates: '{{ rook_volume_node_candidates_tmp }}'

  when: rook_volume_node_candidates is not skipped

- fail:
    msg: No suitable OpenShift node found for hosting the backing volume.
  when: rook_volume_node_candidates.resources | length == 0

- name: Pick the oldest node (non-deterministic if there are two nodes having the same creationTimestamp)
  set_fact:
    rook_volume_node: '{{ (rook_volume_node_candidates.resources | sort(attribute="metadata.creationTimestamp")).0.metadata.name }}'
    rook_volume_node_hostname: '{{ (rook_volume_node_candidates.resources | sort(attribute="metadata.creationTimestamp")).0.metadata.labels["kubernetes.io/hostname"] }}'

