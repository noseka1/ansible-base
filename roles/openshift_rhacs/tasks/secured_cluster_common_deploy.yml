- import_role:
    name: openshift_common
    tasks_from: get_cluster_domain.yml

- import_tasks: get_rhacs_central_host.yml
  when: rhacs_central_host | length == 0

- name: Waiting since {{ lookup("pipe", "date +%r") }} for Central to come up
  uri:
    url: 'https://{{ rhacs_central_host }}/v1/ping'
    url_username: admin
    url_password: '{{ generic_user_password }}'
    force_basic_auth: true
    validate_certs: false
  register: get_ping
  until:
    - get_ping.status == 200
  retries: 30
  delay: 10

- name: Try to generate init-bundle for cluster (returns HTTP 409 if bundle already exists)
  uri:
    url: 'https://{{ rhacs_central_host }}/v1/cluster-init/init-bundles'
    method: POST
    body_format: json
    body:
      name: '{{ openshift_common_cluster_domain }}'
    url_username: admin
    url_password: '{{ generic_user_password }}'
    force_basic_auth: true
    validate_certs: false
    status_code: [ 200, 409 ]
  register: generate_cert_result

- name: Apply the generated init-bundle (skip if no new bundle generated in the previous step)
  kubernetes.core.k8s:
    definition: '{{ generate_cert_result.json.kubectlBundle | b64decode }}'
    namespace: '{{ rhacs_instance_namespace }}'
  when: generate_cert_result.status == 200

- import_role:
    name: openshift_autogitops
    tasks_from: app_deploy.yml
  vars:
    autogitops_app_src_path: templates/secured-cluster
    autogitops_app_dst_path: rhacs/secured-cluster
    autogitops_app_namespace: '{{ rhacs_instance_namespace }}'

- name: Waiting since {{ lookup("pipe", "date +%r") }} for {{ openshift_common_cluster_domain }} to become healthy
  uri:
    url: 'https://{{ rhacs_central_host }}/v1/clusters'
    url_username: admin
    url_password: '{{ generic_user_password }}'
    force_basic_auth: true
    validate_certs: false
  register: get_clusters_result
  until:
    - (get_clusters_result.json.clusters | selectattr("name", "equalto", openshift_common_cluster_domain) | length) == 1
    - (get_clusters_result.json.clusters | selectattr("name", "equalto", openshift_common_cluster_domain) | first).healthStatus != None
    - (get_clusters_result.json.clusters | selectattr("name", "equalto", openshift_common_cluster_domain) | first).healthStatus.overallHealthStatus == 'HEALTHY'
  retries: 120
  delay: 10
